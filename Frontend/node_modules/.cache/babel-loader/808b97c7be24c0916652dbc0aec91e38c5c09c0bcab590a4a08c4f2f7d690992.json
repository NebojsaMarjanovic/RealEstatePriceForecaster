{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nebojsa.marjanovic\\\\Desktop\\\\real_estate_price_forecaster\\\\src\\\\components\\\\BuyingCard.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport LineChart from \"./LineChart\";\nimport axios from 'axios';\nimport Combobox from \"react-widgets/Combobox\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BuyingCard() {\n  _s();\n  const [neighborhood, setNeighborhood] = useState([\"Barajevo\", \"Cukarica\", \"Grocka\", \"Lazarevac\", \"Mladenovac\", \"Novi Beograd\", \"Obrenovac\", \"Palilula\", \"Rakovica\", \"Savski venac\", \"Sopot\", \"Stari grad\", \"Surcin\", \"Vozdovac\", \"Vracar\", \"Zemun\", \"Zvezdara\"]);\n  const roomCount = ['0.5', '1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5', '5.0'];\n  const [historicalPrices, setHistoricalPrices] = useState([]);\n  const [forecast, setForecast] = useState([]);\n  const [lowerBoundForecast, setLowerBoundForecast] = useState([]);\n  const [upperBoundForecast, setUpperBoundForecast] = useState([]);\n  const [realEstateData, setRealEstateData] = useState({\n    location: '',\n    roomCount: ''\n  });\n  function forecastPrice(e) {\n    // console.log(realEstateData)\n    e.preventDefault();\n    axios.post('https://localhost:44338/api/PriceAnalyser/forecast', realEstateData).then(res => {\n      setHistoricalPrices(JSON.stringify(Array.from(res.data.historicalData.entries)));\n      setForecast(res.data.forecast);\n      setUpperBoundForecast(res.data.upperBoundForecast);\n      setLowerBoundForecast(res.data.lowerBoundForecast);\n      setUserData(JSON.stringify(Array.from(res.data.historicalData.entries)));\n    });\n    console.log(userData.datasets);\n    console.log(userData.labels);\n    console.log(userData);\n  }\n  const [userData, setUserData] = useState({\n    labels: Object.keys(historicalPrices).map(key => key),\n    datasets: [{\n      label: \"Prosečna cena nekretnina\",\n      data: Object.values(historicalPrices).map(value => value),\n      backgroundColor: [\"rgba(75,192,192,1)\", \"#ecf0f1\", \"#50AF95\", \"#f3ba2f\", \"#2a71d0\"],\n      borderColor: \"black\",\n      borderWidth: 2\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Naselje\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Combobox, {\n          defaultValue: \"\",\n          data: neighborhood,\n          onChange: value => realEstateData.location = value,\n          placeholder: \"Izaberite naselje\",\n          style: {\n            marginBottom: 20\n          },\n          \"aria-required\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Broj soba\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Combobox, {\n          defaultValue: \"\",\n          data: roomCount,\n          placeholder: \"Izaberite broj soba\",\n          onChange: value => realEstateData.roomCount = value,\n          style: {\n            marginBottom: 20\n          },\n          \"aria-required\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: forecastPrice,\n        className: \"btnCalculate\",\n        children: \"Predvidi cenu\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: 700\n        },\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          chartData: userData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(BuyingCard, \"9sfv9kMTh+VpicKVhLLYvkJzIN0=\");\n_c = BuyingCard;\nexport default BuyingCard;\nvar _c;\n$RefreshReg$(_c, \"BuyingCard\");","map":{"version":3,"names":["useState","LineChart","axios","Combobox","jsxDEV","_jsxDEV","BuyingCard","_s","neighborhood","setNeighborhood","roomCount","historicalPrices","setHistoricalPrices","forecast","setForecast","lowerBoundForecast","setLowerBoundForecast","upperBoundForecast","setUpperBoundForecast","realEstateData","setRealEstateData","location","forecastPrice","e","preventDefault","post","then","res","JSON","stringify","Array","from","data","historicalData","entries","setUserData","console","log","userData","datasets","labels","Object","keys","map","key","label","values","value","backgroundColor","borderColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","onChange","placeholder","style","marginBottom","onClick","className","width","chartData","_c","$RefreshReg$"],"sources":["C:/Users/nebojsa.marjanovic/Desktop/real_estate_price_forecaster/src/components/BuyingCard.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport LineChart from \"./LineChart\";\r\nimport axios from 'axios';\r\nimport Combobox from \"react-widgets/Combobox\";\r\n\r\n\r\nfunction BuyingCard() {\r\n    const[neighborhood, setNeighborhood]=useState([\r\n        \"Barajevo\", \r\n        \"Cukarica\", \r\n        \"Grocka\", \r\n        \"Lazarevac\",\r\n        \"Mladenovac\",\r\n        \"Novi Beograd\",\r\n        \"Obrenovac\",\r\n        \"Palilula\",\r\n        \"Rakovica\",\r\n        \"Savski venac\",\r\n        \"Sopot\",\r\n        \"Stari grad\",\r\n        \"Surcin\",\r\n        \"Vozdovac\",\r\n        \"Vracar\",\r\n        \"Zemun\",\r\n        \"Zvezdara\"\r\n    ]);\r\n    const roomCount=['0.5', '1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5', '5.0'];\r\n    const[historicalPrices, setHistoricalPrices]=useState([]);\r\n    const [forecast, setForecast] = useState([]);\r\n    const [lowerBoundForecast, setLowerBoundForecast] = useState([]);\r\n    const [upperBoundForecast, setUpperBoundForecast] = useState([]);\r\n\r\n\r\n    const [realEstateData, setRealEstateData] = useState({\r\n        location:'',\r\n        roomCount:'',\r\n    });\r\n    \r\n    function forecastPrice (e){\r\n        // console.log(realEstateData)\r\n        e.preventDefault();\r\n        axios.post('https://localhost:44338/api/PriceAnalyser/forecast', realEstateData)\r\n            .then((res)=>{\r\n                setHistoricalPrices(JSON.stringify(Array.from(res.data.historicalData.entries)));\r\n                setForecast(res.data.forecast);\r\n                setUpperBoundForecast(res.data.upperBoundForecast);\r\n                setLowerBoundForecast(res.data.lowerBoundForecast);\r\n\r\n                setUserData(JSON.stringify(Array.from(res.data.historicalData.entries)));\r\n            });\r\n            console.log(userData.datasets);\r\n            console.log(userData.labels);\r\n            console.log(userData);\r\n\r\n    }\r\n\r\n    const [userData, setUserData] = useState({\r\n    labels: Object.keys(historicalPrices).map((key) => key),\r\n    datasets: [\r\n      {\r\n        label: \"Prosečna cena nekretnina\",\r\n        data: Object.values(historicalPrices).map((value) => value),\r\n        backgroundColor: [\r\n          \"rgba(75,192,192,1)\",\r\n          \"#ecf0f1\",\r\n          \"#50AF95\",\r\n          \"#f3ba2f\",\r\n          \"#2a71d0\",\r\n        ],\r\n        borderColor: \"black\",\r\n        borderWidth: 2,\r\n\r\n      },\r\n    ],\r\n  });\r\n\r\n\r\n  return (\r\n    <div>\r\n        <form>\r\n        <div>\r\n                    <label>Naselje</label>\r\n                    <Combobox\r\n                        defaultValue=\"\"\r\n                        data={neighborhood}\r\n                        onChange={(value)=> realEstateData.location=value}\r\n                        placeholder=\"Izaberite naselje\"\r\n                        style={{marginBottom:20}}\r\n                        aria-required = 'true'\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <label>Broj soba</label>\r\n                    <Combobox\r\n                        defaultValue=\"\"\r\n                        data={roomCount}\r\n                        placeholder=\"Izaberite broj soba\"\r\n                        onChange={value=>realEstateData.roomCount=value}\r\n                        style={{marginBottom:20}}\r\n                        aria-required = 'true'\r\n                    />\r\n                </div>\r\n                <button onClick={forecastPrice} className=\"btnCalculate\">\r\n                        Predvidi cenu\r\n                    </button>\r\n        </form>\r\n    <div className=\"App\">\r\n      <div style={{ width: 700 }}>\r\n        <LineChart chartData={userData}/>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default BuyingCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}