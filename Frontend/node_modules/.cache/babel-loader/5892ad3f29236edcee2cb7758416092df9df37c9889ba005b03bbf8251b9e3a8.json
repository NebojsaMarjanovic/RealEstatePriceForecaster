{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\nvar _useCustomEffect = _interopRequireDefault(require(\"./useCustomEffect\"));\nvar _dequal = require(\"dequal\");\nvar _useImmediateUpdateEffect = _interopRequireDefault(require(\"./useImmediateUpdateEffect\"));\nvar _useEventCallback = _interopRequireDefault(require(\"./useEventCallback\"));\nvar _react = require(\"react\");\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction isDepsEqual(_ref, _ref2) {\n  var nextElement = _ref[0],\n    nextConfig = _ref[1];\n  var prevElement = _ref2[0],\n    prevConfig = _ref2[1];\n  return nextElement === prevElement && (0, _dequal.dequal)(nextConfig, prevConfig);\n}\n/**\n * Observe mutations on a DOM node or tree of DOM nodes.\n * Depends on the `MutationObserver` api.\n *\n * ```tsx\n * const [element, attachRef] = useCallbackRef(null);\n *\n * useMutationObserver(element, { subtree: true }, (records) => {\n *\n * });\n *\n * return (\n *   <div ref={attachRef} />\n * )\n * ```\n *\n * @param element The DOM element to observe\n * @param config The observer configuration\n * @param callback A callback fired when a mutation occurs\n */\n\nfunction useMutationObserver(element, config, callback) {\n  var _useState = (0, _react.useState)(null),\n    records = _useState[0],\n    setRecords = _useState[1];\n  var handler = (0, _useEventCallback.default)(callback || setRecords);\n  (0, _useCustomEffect.default)(function () {\n    if (!element) return; // The behavior around reusing mutation observers is confusing\n    // observing again _should_ disable the last listener but doesn't\n    // seem to always be the case, maybe just in JSDOM? In any case the cost\n    // to redeclaring it is gonna be fairly low anyway, so make it simple\n\n    var observer = new MutationObserver(handler);\n    observer.observe(element, config);\n    return function () {\n      observer.disconnect();\n    };\n  }, [element, config], {\n    isEqual: isDepsEqual,\n    // Intentionally done in render, otherwise observer will miss any\n    // changes made to the DOM during this update\n    effectHook: _useImmediateUpdateEffect.default\n  });\n  return callback ? void 0 : records || [];\n}\nvar _default = useMutationObserver;\nexports.default = _default;","map":{"version":3,"names":["exports","__esModule","default","_useCustomEffect","_interopRequireDefault","require","_dequal","_useImmediateUpdateEffect","_useEventCallback","_react","obj","isDepsEqual","_ref","_ref2","nextElement","nextConfig","prevElement","prevConfig","dequal","useMutationObserver","element","config","callback","_useState","useState","records","setRecords","handler","observer","MutationObserver","observe","disconnect","isEqual","effectHook","_default"],"sources":["C:/Users/nebojsa.marjanovic/Desktop/real_estate_price_forecaster/node_modules/@restart/hooks/cjs/useMutationObserver.js"],"sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _useCustomEffect = _interopRequireDefault(require(\"./useCustomEffect\"));\n\nvar _dequal = require(\"dequal\");\n\nvar _useImmediateUpdateEffect = _interopRequireDefault(require(\"./useImmediateUpdateEffect\"));\n\nvar _useEventCallback = _interopRequireDefault(require(\"./useEventCallback\"));\n\nvar _react = require(\"react\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction isDepsEqual(_ref, _ref2) {\n  var nextElement = _ref[0],\n      nextConfig = _ref[1];\n  var prevElement = _ref2[0],\n      prevConfig = _ref2[1];\n  return nextElement === prevElement && (0, _dequal.dequal)(nextConfig, prevConfig);\n}\n/**\n * Observe mutations on a DOM node or tree of DOM nodes.\n * Depends on the `MutationObserver` api.\n *\n * ```tsx\n * const [element, attachRef] = useCallbackRef(null);\n *\n * useMutationObserver(element, { subtree: true }, (records) => {\n *\n * });\n *\n * return (\n *   <div ref={attachRef} />\n * )\n * ```\n *\n * @param element The DOM element to observe\n * @param config The observer configuration\n * @param callback A callback fired when a mutation occurs\n */\n\n\nfunction useMutationObserver(element, config, callback) {\n  var _useState = (0, _react.useState)(null),\n      records = _useState[0],\n      setRecords = _useState[1];\n\n  var handler = (0, _useEventCallback.default)(callback || setRecords);\n  (0, _useCustomEffect.default)(function () {\n    if (!element) return; // The behavior around reusing mutation observers is confusing\n    // observing again _should_ disable the last listener but doesn't\n    // seem to always be the case, maybe just in JSDOM? In any case the cost\n    // to redeclaring it is gonna be fairly low anyway, so make it simple\n\n    var observer = new MutationObserver(handler);\n    observer.observe(element, config);\n    return function () {\n      observer.disconnect();\n    };\n  }, [element, config], {\n    isEqual: isDepsEqual,\n    // Intentionally done in render, otherwise observer will miss any\n    // changes made to the DOM during this update\n    effectHook: _useImmediateUpdateEffect.default\n  });\n  return callback ? void 0 : records || [];\n}\n\nvar _default = useMutationObserver;\nexports.default = _default;"],"mappings":"AAAA,YAAY;;AAEZA,OAAO,CAACC,UAAU,GAAG,IAAI;AACzBD,OAAO,CAACE,OAAO,GAAG,KAAK,CAAC;AAExB,IAAIC,gBAAgB,GAAGC,sBAAsB,CAACC,OAAO,CAAC,mBAAmB,CAAC,CAAC;AAE3E,IAAIC,OAAO,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAE/B,IAAIE,yBAAyB,GAAGH,sBAAsB,CAACC,OAAO,CAAC,4BAA4B,CAAC,CAAC;AAE7F,IAAIG,iBAAiB,GAAGJ,sBAAsB,CAACC,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAE7E,IAAII,MAAM,GAAGJ,OAAO,CAAC,OAAO,CAAC;AAE7B,SAASD,sBAAsBA,CAACM,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACT,UAAU,GAAGS,GAAG,GAAG;IAAER,OAAO,EAAEQ;EAAI,CAAC;AAAE;AAE9F,SAASC,WAAWA,CAACC,IAAI,EAAEC,KAAK,EAAE;EAChC,IAAIC,WAAW,GAAGF,IAAI,CAAC,CAAC,CAAC;IACrBG,UAAU,GAAGH,IAAI,CAAC,CAAC,CAAC;EACxB,IAAII,WAAW,GAAGH,KAAK,CAAC,CAAC,CAAC;IACtBI,UAAU,GAAGJ,KAAK,CAAC,CAAC,CAAC;EACzB,OAAOC,WAAW,KAAKE,WAAW,IAAI,CAAC,CAAC,EAAEV,OAAO,CAACY,MAAM,EAAEH,UAAU,EAAEE,UAAU,CAAC;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASE,mBAAmBA,CAACC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,EAAE;EACtD,IAAIC,SAAS,GAAG,CAAC,CAAC,EAAEd,MAAM,CAACe,QAAQ,EAAE,IAAI,CAAC;IACtCC,OAAO,GAAGF,SAAS,CAAC,CAAC,CAAC;IACtBG,UAAU,GAAGH,SAAS,CAAC,CAAC,CAAC;EAE7B,IAAII,OAAO,GAAG,CAAC,CAAC,EAAEnB,iBAAiB,CAACN,OAAO,EAAEoB,QAAQ,IAAII,UAAU,CAAC;EACpE,CAAC,CAAC,EAAEvB,gBAAgB,CAACD,OAAO,EAAE,YAAY;IACxC,IAAI,CAACkB,OAAO,EAAE,OAAO,CAAC;IACtB;IACA;IACA;;IAEA,IAAIQ,QAAQ,GAAG,IAAIC,gBAAgB,CAACF,OAAO,CAAC;IAC5CC,QAAQ,CAACE,OAAO,CAACV,OAAO,EAAEC,MAAM,CAAC;IACjC,OAAO,YAAY;MACjBO,QAAQ,CAACG,UAAU,EAAE;IACvB,CAAC;EACH,CAAC,EAAE,CAACX,OAAO,EAAEC,MAAM,CAAC,EAAE;IACpBW,OAAO,EAAErB,WAAW;IACpB;IACA;IACAsB,UAAU,EAAE1B,yBAAyB,CAACL;EACxC,CAAC,CAAC;EACF,OAAOoB,QAAQ,GAAG,KAAK,CAAC,GAAGG,OAAO,IAAI,EAAE;AAC1C;AAEA,IAAIS,QAAQ,GAAGf,mBAAmB;AAClCnB,OAAO,CAACE,OAAO,GAAGgC,QAAQ"},"metadata":{},"sourceType":"script","externalDependencies":[]}